<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="50" failures="0" name="org.testifj.util.SingleThreadedStackTest" time="0.011" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib"/>
    <property name="java.vm.version" value="25.60-b23"/>
    <property name="user.country.format" value="SE"/>
    <property name="gopherProxySet" value="false"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/Developer/Projects/testifj-origin"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Developer/Projects/testifj-origin"/>
    <property name="java.runtime.version" value="1.8.0_60-b27"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/endorsed"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/c3/0975dwws4jjgb4t01pvbc__80000gn/T/"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/usr/local/Cellar/maven/3.3.3/libexec/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/nille/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.11.3"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="user.home" value="/Users/nille"/>
    <property name="user.timezone" value="Europe/Stockholm"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="nille"/>
    <property name="java.class.path" value="/usr/local/Cellar/maven/3.3.3/libexec/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_60"/>
    <property name="java.ext.dirs" value="/Users/nille/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/>
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/local/Cellar/maven/3.3.3/libexec"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="swapShouldNotAcceptNullElement[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="swapShouldFailIfStackIsEmpty[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="tailShouldReturnElementsFromIndex[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="tailShouldFailForInvalidIndex[0]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="insertShouldInsertElementAtIndex[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="stackListenerShouldGetNotifiedWhenElementIsInserted[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="instanceShouldNotBeEqualToNullOrDifferentType[0]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="constructorShouldNotAcceptNullBackingList[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="popShouldReturnLastElementAndRemoveIt[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="popShouldFailIfStackIsEmpty[0]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="toStringShouldReturnStringWithContents[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="removeStackListenerShouldNotAcceptNullArg[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="instanceShouldBeEqualToItSelf[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="swapShouldReplaceTopElementAndReturnOld[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="peekShouldReturnLastElementWithoutRemovingIt[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="swapShouldNotifyStackListener[0]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="tailWithNegativeValueShouldReturnValuesFromEnd[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="peekShouldFailIfStackIsEmpty[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="stackListenerShouldGetNotifiedWhenElementIsPopped[0]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="stackListenerShouldGetNotifiedWhenElementIsPushed[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="clearShouldRemoveAllElements[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="addStackListenerShouldNotAcceptNullArg[0]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="pushShouldNotAcceptNullElement[0]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="streamShouldStreamAllElements[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="instancesWithEqualContentsShouldBeEqual[0]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="swapShouldNotAcceptNullElement[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="swapShouldFailIfStackIsEmpty[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="tailShouldReturnElementsFromIndex[1]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="tailShouldFailForInvalidIndex[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="insertShouldInsertElementAtIndex[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="stackListenerShouldGetNotifiedWhenElementIsInserted[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="instanceShouldNotBeEqualToNullOrDifferentType[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="constructorShouldNotAcceptNullBackingList[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="popShouldReturnLastElementAndRemoveIt[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="popShouldFailIfStackIsEmpty[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="toStringShouldReturnStringWithContents[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="removeStackListenerShouldNotAcceptNullArg[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="instanceShouldBeEqualToItSelf[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="swapShouldReplaceTopElementAndReturnOld[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="peekShouldReturnLastElementWithoutRemovingIt[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="swapShouldNotifyStackListener[1]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="tailWithNegativeValueShouldReturnValuesFromEnd[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="peekShouldFailIfStackIsEmpty[1]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="stackListenerShouldGetNotifiedWhenElementIsPopped[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="stackListenerShouldGetNotifiedWhenElementIsPushed[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="clearShouldRemoveAllElements[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="addStackListenerShouldNotAcceptNullArg[1]" time="0.001"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="pushShouldNotAcceptNullElement[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="streamShouldStreamAllElements[1]" time="0"/>
  <testcase classname="org.testifj.util.SingleThreadedStackTest" name="instancesWithEqualContentsShouldBeEqual[1]" time="0"/>
</testsuite>